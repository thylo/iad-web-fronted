---
// Composant SandpackEditor pour des exemples de code inline
interface Props {
  files: Record<string, string>;
  template?: 'static' | 'vanilla' | 'react' | 'vue';
  height?: string;
  theme?: 'light' | 'dark' | 'auto';
}

const { 
  files, 
  template = 'static', 
  height = '400px',
  theme = 'auto'
} = Astro.props;
---

<div 
  class="sandpack-wrapper" 
  data-files={JSON.stringify(files)} 
  data-template={template} 
  data-height={height}
  data-theme={theme}
>
  <div class="sandpack-container"></div>
</div>

<style is:global>
  .sandpack-wrapper {
    margin: 2rem 0;
  }
  
  /* Force le layout vertical (preview en dessous du code) */
  .sandpack-wrapper .sp-stack {
    flex-direction: column !important;
  }
  
  .sandpack-wrapper .sp-preview-container,
  .sandpack-wrapper .sp-code-editor {
    width: 100% !important;
    max-width: 100% !important;
    flex-basis: auto !important;
  }
  
  .sandpack-wrapper .sp-preview-container {
    max-height: 400px;
  }
</style>

<script>
  import { Sandpack } from '@codesandbox/sandpack-react';
  import { createRoot } from 'react-dom/client';
  import React from 'react';

  document.querySelectorAll('.sandpack-wrapper').forEach((wrapper) => {
    const container = wrapper.querySelector('.sandpack-container');
    if (!container) return;
    
    const files = JSON.parse(wrapper.getAttribute('data-files') || '{}');
    const template = wrapper.getAttribute('data-template') || 'static';
    const height = wrapper.getAttribute('data-height') || '400px';
    const theme = wrapper.getAttribute('data-theme') || 'auto';

    const root = createRoot(container);
    root.render(
      React.createElement(Sandpack, {
        template,
        files,
        options: {
          showNavigator: false,
          showTabs: true,
          editorHeight: height,
          showLineNumbers: true,
          closableTabs: false,
        },
        theme: theme,
      })
    );
  });
</script>
