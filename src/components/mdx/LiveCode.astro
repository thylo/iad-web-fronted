---
// Composant LiveCode pour charger automatiquement les exemples de code
interface Props {
  example: string; // chemin relatif depuis src/examples/
  height?: string;
  template?: 'static' | 'vanilla';
  theme?: 'light' | 'dark' | 'auto';
}

const { example, height = '400px', template = 'static', theme = 'auto' } = Astro.props;

// Charger tous les fichiers de l'exemple
const allFiles = import.meta.glob('/src/examples/**/*', { 
  query: '?raw',
  import: 'default',
  eager: true 
});

// Filtrer les fichiers pour cet exemple spécifique
const examplePath = `/src/examples/${example}`;
const files: Record<string, string> = {};

Object.entries(allFiles).forEach(([path, content]) => {
  if (path.startsWith(examplePath) && typeof content === 'string') {
    // Extraire le nom du fichier
    const filename = path.replace(examplePath, '').replace(/^\//, '');
    
    // Mapper vers les noms attendus par Sandpack
    let sandpackPath = `/${filename}`;
    if (filename.endsWith('.html')) sandpackPath = '/index.html';
    if (filename.endsWith('.css')) sandpackPath = '/styles.css';
    if (filename.endsWith('.js')) sandpackPath = '/script.js';
    
    files[sandpackPath] = content;
  }
});

// Vérifier qu'au moins un fichier a été trouvé
if (Object.keys(files).length === 0) {
  console.error(`Aucun fichier trouvé pour l'exemple: ${example}`);
}
---

{Object.keys(files).length > 0 ? (
  <div 
    class="sandpack-wrapper" 
    data-files={JSON.stringify(files)} 
    data-template={template} 
    data-height={height}
    data-theme={theme}
  >
    <div class="sandpack-container"></div>
  </div>
) : (
  <div class="example-error">
    <p>❌ Exemple introuvable : <code>{example}</code></p>
  </div>
)}

<style is:global>
  .sandpack-wrapper {
    margin: 2rem 0;
  }
  
  /* Force le layout vertical (preview en dessous du code) */
  .sandpack-wrapper .sp-stack {
    flex-direction: column !important;
  }
  
  .sandpack-wrapper .sp-preview-container,
  .sandpack-wrapper .sp-code-editor {
    width: 100% !important;
    max-width: 100% !important;
    flex-basis: auto !important;
  }

  .example-error {
    padding: 1rem;
    background: #fee;
    border: 1px solid #fcc;
    border-radius: 4px;
    color: #c00;
  }
</style>

<script>
  import { Sandpack } from '@codesandbox/sandpack-react';
  import { createRoot } from 'react-dom/client';
  import React from 'react';

  document.querySelectorAll('.sandpack-wrapper').forEach((wrapper) => {
    const container = wrapper.querySelector('.sandpack-container');
    if (!container) return;
    
    const files = JSON.parse(wrapper.getAttribute('data-files') || '{}');
    const template = wrapper.getAttribute('data-template') || 'static';
    const height = wrapper.getAttribute('data-height') || '400px';
    const theme = wrapper.getAttribute('data-theme') || 'auto';

    const root = createRoot(container);
    root.render(
      React.createElement(Sandpack, {
        template,
        files,
        options: {
          showNavigator: false,
          showTabs: true,
          editorHeight: height,
          showLineNumbers: true,
          closableTabs: false,
        },
        theme: theme,
      })
    );
  });
</script>
