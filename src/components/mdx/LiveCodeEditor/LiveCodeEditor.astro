---
/**
 * Composant LiveCodeEditor refactorisé
 * Layout: preview → toolbar → éditeurs
 * Responsabilité: orchestrer les sous-composants
 */

import { loadExampleFiles } from './example-loader.js';
import EditorToolbar from './EditorToolbar.astro';
import PreviewPanel from './PreviewPanel.astro';

interface Props {
  example: string;              // chemin relatif depuis src/examples/
  editorHeight?: string;        // hauteur de l'éditeur
  previewHeight?: string;       // hauteur de la preview
}

const { 
  example, 
  editorHeight = '300px', 
  previewHeight = '400px' 
} = Astro.props;

// Charger les fichiers de l'exemple
const { html, css, js, hasFiles } = loadExampleFiles(example);
const files = { html, css, js };
---

{hasFiles ? (
  <div class="live-code-editor" data-files={JSON.stringify(files)}>
    <!-- 1. Preview en premier (comme demandé) -->
    <PreviewPanel height={previewHeight} />

    <!-- 2. Toolbar avec tabs et reset -->
    <EditorToolbar files={files} />

    <!-- 3. Conteneurs éditeurs -->
    <div class="editors-container">
      {html && <div class="editor-wrapper" data-lang="html" style={`height: ${editorHeight}`}></div>}
      {css && <div class="editor-wrapper" data-lang="css" style={`height: ${editorHeight}`}></div>}
      {js && <div class="editor-wrapper" data-lang="js" style={`height: ${editorHeight}`}></div>}
    </div>
  </div>
) : (
  <div class="example-error">
    <p>❌ Exemple introuvable : <code>{example}</code></p>
  </div>
)}

<style>
  /* Styles du conteneur principal uniquement */
  .live-code-editor {
    border: 1px solid var(--sl-color-gray-5);
    border-radius: 0.5rem;
    overflow: hidden;
    margin: 1.5rem 0;
    background: var(--sl-color-bg);
  }

  .editors-container {
    position: relative;
  }

  .editor-wrapper {
    display: none;
    overflow: auto;
  }

  .editor-wrapper.active {
    display: block;
  }

  .example-error {
    padding: 1rem;
    background: var(--sl-color-red-low);
    border: 1px solid var(--sl-color-red);
    border-radius: 0.5rem;
    color: var(--sl-color-red-high);
    margin: 1.5rem 0;
  }

  .example-error code {
    background: var(--sl-color-red);
    padding: 0.125rem 0.375rem;
    border-radius: 0.25rem;
  }
</style>

<script>
  import { createEditorState } from './editor-state-manager.js';
  import { initTabSwitching } from './tab-manager.js';

  // Initialiser tous les éditeurs de la page
  document.querySelectorAll('.live-code-editor').forEach((container) => {
    const filesData = container.getAttribute('data-files');
    if (!filesData) return;

    const files = JSON.parse(filesData);

    // Créer le gestionnaire d'état
    const editorState = createEditorState(container, files);

    // Initialiser dans l'ordre
    editorState.initPreview();
    editorState.initEditors();
    editorState.setupReset();

    // Initialiser le système d'onglets
    initTabSwitching(container);
  });
</script>
